## Implementation

### 1. Setup and Dependencies

#### Install Required Libraries
To set up the project, ensure the following dependencies are installed:


#### Clone the Repository

---

### 2. Implementation Workflow

The project implementation is divided into the following steps:

#### **Step 1: Dataset Collection and Preparation**
- **Task:** Collect vehicle datasets from sources like Kaggle, Roboflow, and open-source repositories.
- **Steps:**
  - Label and annotate vehicle images using tools like CVAT.ai.
  - Resize images to a uniform resolution of 640x640 pixels.
  - Apply preprocessing techniques such as auto-orientation and greyscale conversion.
  - Perform data augmentation, including adding noise, blurring, and converting to greyscale.

#### **Step 2: Model Training**
- **Task:** Train the YOLOv11 model for object detection.
- **Steps:**
  - Use YOLOv11n for better performance after testing YOLOv11m.
  - Train the model with 50 epochs to achieve >90% detection accuracy.
  - Validate the model under varied conditions like noise and different lighting scenarios.

#### **Step 3: Real-Time Video Processing**
- **Task:** Process real-time video feed from CCTV cameras.
- **Steps:**
  - Capture video frames using OpenCV.
  - Pass frames through the YOLOv11 model for vehicle detection and classification.
  - Calculate vehicle density in each lane and identify high-priority vehicles.

#### **Step 4: Dynamic Signal Adjustment**
- **Task:** Assign signal timings dynamically based on vehicle density and priority.
- **Steps:**
  - Allocate time to each lane within a range of 5â€“120 seconds.
  - Integrate with traffic signal controllers to adjust timings in real-time.

#### **Step 5: Monitoring and Visualization**
- **Task:** Build a dashboard to monitor traffic conditions.
- **Steps:**
  - Display real-time video feed and vehicle detection results.
  - Show lane-wise density and current signal timings.

---

### 3. Directory Structure

---

### 4. Example Usage

#### Running the System
To start the system:

Access the dashboard at `http://localhost:5000`.

---

### 5. Results

- **Detection Accuracy:** Achieved >90% detection accuracy with YOLOv11n after 50 epochs.
- **Signal Adjustment Time:** Signal timings adjusted dynamically within 2 seconds of detection.
- **Dashboard:** Displays real-time video feed, vehicle detection, and signal timing.



